{"version":3,"sources":["components/TaskItem.js","components/TaskList.js","components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","App.js","reportWebVitals.js","index.js"],"names":["TaskItem","onUpdateStatus","props","tasks","id","onHandleDeleteItem","onHandleUpdate","this","index","name","className","status","onClick","type","React","Component","TaskList","run","console","log","onChange","event","target","value","setState","onFilter","state","filterName","filterStatus","element","map","task","defaultValue","TaskForm","handleHideTaskForm","onExitForm","onSubmit","preventDefault","onSubmitData","resetData","taskEditing","nextProps","Math","floor","random","toString","substring","s4","Search","onSearch","keyword","Sort","sortKey","sortValue","key","onSort","sort","data-toggle","href","Control","App","findIndex","result","forEach","localStorage","setItem","JSON","stringify","isDisplayForm","onToggleForm","handleAddProject","onOpenForm","data","generateID","push","splice","window","location","reload","filter","toLowerCase","parseInt","keySort","keyValue","getItem","parse","removeAccents","str","normalize","replace","indexOf","a","b","elmForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01b649fb.chunk.js","sourcesContent":["import React from \"react\";\r\nclass TaskItem extends React.Component {\r\n    onUpdateStatus = ()=>{\r\n        this.props.onUpdateStatus(this.props.tasks.id)\r\n    }\r\n    onHandleDeleteItem = () => {\r\n        this.props.onHandleDeleteItem(this.props.tasks.id)\r\n    }\r\n    onHandleUpdate = () => {\r\n        this.props.onHandleUpdate(this.props.tasks.id)\r\n    }\r\n    render(){\r\n    return (\r\n        <tr>\r\n            <td>{this.props.index}</td>\r\n            <td>{this.props.tasks.name}</td>\r\n            <td>\r\n                <span className={this.props.tasks.status === true ? \"label label-success\" : \"label label-danger\"}\r\n                    onClick={this.onUpdateStatus}\r\n                >\r\n                {this.props.tasks.status === true ? \"Kích hoạt\" : \"Ẩn\"}\r\n                </span>\r\n                {/* <button type=\"button\" className=\"btn btn-success  success\">Kích hoạt</button> */}\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" className=\"btn btn-danger danger\" onClick={this.onHandleUpdate}>Sửa</button>\r\n                <button type=\"button\" className=\"btn btn-success  success\" onClick={this.onHandleDeleteItem}>Xóa</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n      }\r\n}\r\n\r\nexport default TaskItem;","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\"\r\nclass TaskList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            filterName : \"\",\r\n            filterStatus : -1\r\n        }\r\n    }\r\n    run = () => {\r\n        console.log(1)    \r\n    }\r\n    onChange = (event)=>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name] : value\r\n        },()=>{\r\n            this.props.onFilter(this.state);\r\n        });\r\n        \r\n    }\r\n    render(){\r\n        var element = this.props.tasks.map((task,index)=>{\r\n            return <TaskItem \r\n            key={index} \r\n            tasks={task} \r\n            index={index}\r\n            onUpdateStatus={this.props.onUpdateStatus}\r\n            onHandleDeleteItem = {this.props.onHandleDeleteItem}\r\n            onHandleUpdate = {this.props.onHandleUpdate}\r\n            />\r\n        })\r\n        return (\r\n                <table className=\"table table-bordered table-hover mgtb-30  \">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>STT</th>\r\n                        <th>Tên công việc</th>\r\n                        <th>Trạng thái</th>\r\n                        <th>Hành động</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>\r\n                            <input onChange={this.onChange} type=\"text\" name=\"filterName\" className=\"form-control\" defaultValue={\"\"}/>\r\n                        </td>\r\n                        <td>\r\n                            <select onChange={this.onChange} name=\"filterStatus\" className=\"form-control\" defaultValue={-1}>\r\n                                <option value={-1}>Tất cả</option>\r\n                                <option value={0}>Ẩn</option>\r\n                                <option value={1}>Kích hoạt</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    {element}\r\n                    </tbody>\r\n                </table>\r\n            )\r\n        }\r\n}\r\n\r\nexport default TaskList;","import React from \"react\";\r\nclass TaskForm extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id : '',\r\n            name : '',\r\n            status : false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.taskEditing){\r\n            this.setState({\r\n                id : this.props.taskEditing.id,\r\n                name : this.props.taskEditing.name,\r\n                status : this.props.taskEditing.status\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.taskEditing){\r\n            this.setState({\r\n                id : nextProps.taskEditing.id,\r\n                name : nextProps.taskEditing.name,\r\n                status : nextProps.taskEditing.status\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                id : '',\r\n                name : '',\r\n                status : false\r\n            })\r\n        }\r\n    }\r\n    \r\n    \r\n    handleHideTaskForm = ()=>{\r\n        this.props.onExitForm()\r\n    }\r\n    onChange = (event)=>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value === \"true\" ? true : target.value;\r\n\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    onSubmit = (event)=>{\r\n        event.preventDefault();\r\n        if (this.state.name !== ''){\r\n            this.props.onSubmitData(this.state)\r\n        }\r\n    } \r\n    resetData = ()=>{\r\n        this.props.resetData();\r\n    }\r\n    s4(){\r\n        return Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID(){\r\n        return this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\"+this.s4() + \"-\"+ this.s4();\r\n    }\r\n      render(){\r\n        var taskEditing = this.props.taskEditing\r\n        return (\r\n            <div className=\"panel panel-warning taskForm\">\r\n                <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\" >\r\n                    {taskEditing ? 'Sửa công việc' : 'Thêm công việc'}\r\n                    <div className=\"icon-close text-right\" onClick={this.handleHideTaskForm}>\r\n                        <i className=\"fas fa-times-circle\" ></i>\r\n                    </div>\r\n                </h3>\r\n                </div>\r\n                <form className=\"panel-body\"  onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                    <label>Tên : </label>\r\n                    <input \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            name=\"name\"\r\n                            value={this.state.name}\r\n                            onChange={this.onChange}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Trạng thái : </label>\r\n                    <select  className=\"form-control\" \r\n                            name=\"status\"\r\n                            value={this.state.status}\r\n                            onChange={this.onChange}\r\n                    >\r\n                        <option value={true}>Kích hoạt</option>\r\n                        <option value={false}>Ẩn</option>\r\n                    </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-success mgr-10\">Lưu lại</button>\r\n                    <button type=\"button\" className=\"btn btn-danger mgr-10\">Hủy bỏ</button>                               \r\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={this.resetData}>Reset List</button>                               \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n      }\r\n}\r\n\r\nexport default TaskForm;","import React from \"react\"\r\nclass Search extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            keyword : ''\r\n        }\r\n    }\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    onSearch = () =>{\r\n        this.props.onSearch(this.state.keyword);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"input-group\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        name = \"keyword\"\r\n                        onChange = {this.onChange}\r\n                        />\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-primary\"\r\n                        onClick={this.onSearch}\r\n                        >Tìm</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from \"react\"\r\nclass Sort extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            sort : {\r\n                key : 'name',\r\n                value : 1\r\n            }\r\n        }\r\n    }\r\n    onClick = (sortKey,sortValue) =>{\r\n        this.setState({\r\n            key : sortKey,\r\n            value : sortValue\r\n        },()=>{\r\n            this.props.onSort(sortKey,sortValue);\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-primary dropdown-toggle \" type=\"button\" data-toggle=\"dropdown\">Sắp Xếp\r\n                    <span className=\"caret mgl-10\"></span></button>\r\n                    <ul className=\"dropdown-menu\">\r\n                        <li onClick={()=>{this.onClick('name',1)}}><a href=\"#demo\">Từ A - Z</a></li>\r\n                        <li onClick={()=>{this.onClick('name',-1)}}><a href=\"#demo\">Từ Z - A</a></li>\r\n                        <li onClick={()=>{this.onClick('status',1)}}><a href=\"#demo\">Trạng thái kích hoạt</a></li>\r\n                        <li onClick={()=>{this.onClick('status',-1)}}><a href=\"#demo\">Trạng thái ẩn</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sort;","import React from \"react\"\r\nimport Search  from \"./Search\"\r\nimport Sort  from \"./Sort\"\r\nclass Control extends React.Component {\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                    <Search onSearch={this.props.onSearch}/>\r\n                    <Sort onSort={this.props.onSort}/>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nexport default Control;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskList from './components/TaskList';\r\nimport TaskForm from './components/TaskForm';\r\nimport Control from './components/Control';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks : [],\r\n            isDisplayForm : false,\r\n            keyword : '',\r\n            taskEditing : null,\r\n            filter : {\r\n                name : '',\r\n                status : -1\r\n            },\r\n            sortValue : {\r\n                key : 'name',\r\n                value : 1\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(localStorage && localStorage.getItem('tasks')){\r\n            var tasks = JSON.parse(localStorage.getItem('tasks'));\r\n            this.setState({\r\n                tasks : tasks\r\n            });\r\n        } else {\r\n            this.resetData();\r\n        }\r\n    }\r\n\r\n    s4() {\r\n        return  Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID(){\r\n        return this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\"+this.s4() + \"-\"+ this.s4();\r\n    }\r\n\r\n    findIndex = (id) => {\r\n        var { tasks } = this.state;\r\n        var result = -1;\r\n        tasks.forEach((task, index) => {\r\n            if(task.id === id){\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    onUpdateStatus = (id) => {\r\n        var tasks = this.state.tasks;\r\n        var index = this.findIndex(id);\r\n        tasks[index].status = !tasks[index].status;\r\n        this.setState({\r\n            tasks : tasks\r\n        });\r\n        localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    }\r\n    onHandleUpdate = (id) => {\r\n        var {tasks} = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = tasks[index];   \r\n        console.log(taskEditing)\r\n        this.setState({\r\n            taskEditing : taskEditing,\r\n            isDisplayForm : true\r\n        })\r\n    }\r\n\r\n    \r\n    onToggleForm = () => {\r\n        if(this.state.taskEditing !== null && this.state.isDisplayForm){\r\n            this.setState({\r\n                taskEditing : null,\r\n                isDisplayForm : true\r\n            });\r\n\r\n        }else{\r\n            this.setState({\r\n                isDisplayForm : !this.state.isDisplayForm,\r\n                taskEditing : null\r\n            });\r\n        }\r\n    }\r\n\r\n    handleAddProject = () => {\r\n        this.onOpenForm();\r\n        this.setState({\r\n            taskEditing : null\r\n        })\r\n    }\r\n\r\n    onExitForm = () =>{\r\n        this.setState({\r\n            isDisplayForm : false,\r\n            taskEditing : null\r\n        });\r\n    }\r\n\r\n    onOpenForm = () =>{\r\n        this.setState({\r\n            isDisplayForm : true,\r\n            taskEditing : null\r\n        });\r\n    }\r\n\r\n    onSubmit = (data)=>{\r\n        var { tasks } = this.state;\r\n        if (data.id === ''){\r\n            data.id = this.generateID();\r\n            tasks.push(data);\r\n        } else {\r\n            var index = this.findIndex(data.id);\r\n            console.log(index);\r\n            tasks[index] = data;\r\n            this.onExitForm();\r\n        }\r\n        this.setState({\r\n            tasks : tasks\r\n        })\r\n        localStorage.setItem(\"tasks\",JSON.stringify(tasks   ));\r\n    }\r\n    onHandleDeleteItem = (id) => {\r\n        var { tasks } = this.state;\r\n        var index = this.findIndex(id);\r\n        tasks.splice(index, 1);\r\n        this.setState({\r\n            tasks : tasks\r\n        });\r\n        localStorage.setItem('tasks', JSON.stringify(tasks));\r\n        this.onExitForm();\r\n    }\r\n    resetData = ()=>{\r\n        var tasks = [\r\n            {\r\n              id : this.generateID(),\r\n              name : \"Học lập trình Reactjs\",\r\n              status :  true\r\n            },\r\n            {\r\n              id : this.generateID(),\r\n              name : \"Đi bơi\",\r\n              status :  false\r\n            },\r\n            {\r\n              id : this.generateID(),\r\n              name : \"Đi ngủ\",\r\n              status :  true\r\n            }\r\n        ]\r\n        localStorage.setItem('tasks',JSON.stringify(tasks));\r\n        window.location.reload();\r\n    }\r\n    \r\n    onFilter = (data) => {\r\n        this.setState({\r\n            filter : {\r\n                name : data.filterName.toLowerCase(),\r\n                status :  parseInt(data.filterStatus,10)\r\n            }\r\n        })\r\n    }\r\n    onSearch = (keyword) => {\r\n        this.setState({\r\n            keyword : keyword\r\n        })\r\n    }\r\n    onSort = (keySort,keyValue) => {\r\n        this.setState({\r\n            sortValue : {\r\n                key : keySort,\r\n                value : keyValue\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        var {\r\n            tasks,\r\n            isDisplayForm,\r\n            taskEditing,\r\n            keyword,\r\n            sortValue\r\n        } = this.state;\r\n        if (tasks) {\r\n            tasks = tasks.filter((task,index)=>{\r\n                return (task.name.toLowerCase().indexOf(this.state.filter.name)>=0 ? true : false)\r\n            })\r\n            if (this.state.filter.status !== -1){\r\n                tasks = tasks.filter((task,index)=>{\r\n                return (task.status===(this.state.filter.status ? true : false))\r\n            })}\r\n        }\r\n        function removeAccents(str) {\r\n          return str.normalize('NFD')\r\n                    .replace(/[\\u0300-\\u036f]/g, '')\r\n                    .replace(/đ/g, 'd').replace(/Đ/g, 'D');\r\n        }\r\n        if (keyword) {\r\n            keyword = removeAccents(keyword.toLowerCase());\r\n            tasks = tasks.filter((task,index)=>{\r\n                var check = task.name.toLowerCase();\r\n                return (removeAccents(check).indexOf(keyword)>=0 ? true : false)\r\n            })\r\n        }\r\n        console.log(sortValue);\r\n        if (sortValue.key === \"name\"){\r\n            console.log('name')\r\n            tasks.sort((a,b)=>{\r\n                if (a.name > b.name) return sortValue.value;\r\n                else return -sortValue.value;\r\n            })\r\n        } else {\r\n            tasks.sort((a,b)=>{\r\n                if (a.status < b.status) return sortValue.value;\r\n                else return -sortValue.value;\r\n            })\r\n        }\r\n        var elmForm = isDisplayForm === true ? <TaskForm \r\n                                                        onSubmitData={this.onSubmit}\r\n                                                        onExitForm={this.onExitForm}\r\n                                                        taskEditing={taskEditing}\r\n                                                        resetData={this.resetData}\r\n                                                /> : '';\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"text-center\">\r\n                    <h1>Quản Lý Công Việc</h1><hr/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className={ isDisplayForm === true ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\r\n                        { elmForm }\r\n                    </div>\r\n                    <div className={ isDisplayForm === true ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.onToggleForm} >\r\n                            <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\r\n                        </button>\r\n                        <Control \r\n                                onSearch={this.onSearch}\r\n                                onSort={this.onSort}\r\n                                />\r\n                        <TaskList\r\n                            tasks={tasks}\r\n                            onUpdateStatus={this.onUpdateStatus}\r\n                            onHandleDeleteItem={this.onHandleDeleteItem}\r\n                            onHandleUpdate={this.onHandleUpdate}\r\n                            onFilter={this.onFilter}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}